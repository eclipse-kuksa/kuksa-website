<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KUKSA.val on Eclipse KUKSA</title>
    <link>https://eclipse-kuksa.github.io/kuksa-website/tags/kuksa.val/</link>
    <description>Recent content in KUKSA.val on Eclipse KUKSA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://eclipse-kuksa.github.io/kuksa-website/tags/kuksa.val/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KUKSA at FOSDEM 2023</title>
      <link>https://eclipse-kuksa.github.io/kuksa-website/blog/2023/02/17/2023-02-17-fosdem2023/</link>
      <pubDate>Fri, 17 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse-kuksa.github.io/kuksa-website/blog/2023/02/17/2023-02-17-fosdem2023/</guid>
      <description>KUKSA has been at the FOSDEM 2023 in Brussels. We show-cased how the Eclipse KUKSA project can help to leverage the advantages of a standardized description of vehicle signals
The talk presented the architectural answer given by the Eclipse KUKSA project to leverage the COVESA Vehicle Signal Specification inside a vehicle. It showed how to use KUKSA components to gather and transform the data from lower embedded layers in the vehicle, and providing them in a secure way to apps and services.</description>
    </item>
    
    <item>
      <title>KUKSA CANOPi Prototyping platform for Software Defined Vehicle applications</title>
      <link>https://eclipse-kuksa.github.io/kuksa-website/blog/2022/03/24/2022-03-24-canopi/</link>
      <pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse-kuksa.github.io/kuksa-website/blog/2022/03/24/2022-03-24-canopi/</guid>
      <description>If you have followed KUKSA over the last years you know the KUKSA OBD Prototyping Platform, a Raspberry CM3-based OBD dongle. Now we are proud to present the second iteration of the KUKSA hardware. As we are not limited to OBD anymore, a small rename was in order, so let&amp;rsquo;s welcome the
KUKSA CANOPi Platform a Rapid Prototyping Hardware for Software Defined Vehicle Applications. So what is new?
Two independent MCP251xFD based CAN-FD interfaces.</description>
    </item>
    
    <item>
      <title>Kuksa.val for SCR Anti-Tampering in trucks [Talk]</title>
      <link>https://eclipse-kuksa.github.io/kuksa-website/blog/2021/06/24/2021-06-24-eclipsesaam-scr-anti-tampering/</link>
      <pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse-kuksa.github.io/kuksa-website/blog/2021/06/24/2021-06-24-eclipsesaam-scr-anti-tampering/</guid>
      <description>The DIAS project used Eclipse KUKSA to detect tampering in the exhaust cleaning system of a modern truck. Modern internal combustion engines have several advanced exhaust treatment systems to meet emission standards and legislation. In case of Selective Catalytic Reduction (SCR) for diesel engines, a catalyst (“AdBlue®”) is used as consumable. This incurs costs for the operator of diesel vehicles and provides an incentive to unlawfully circumvent those systems.
The talk presents how the Eclipse KUKSA stack has been used to realize an anti-tampering system for commercial heavy-duty trucks exhaust systems.</description>
    </item>
    
    <item>
      <title>Eclipse Kuksa.val DBC Feeder Demo [Video]</title>
      <link>https://eclipse-kuksa.github.io/kuksa-website/blog/2020/08/18/2020-08-18-dbc/</link>
      <pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse-kuksa.github.io/kuksa-website/blog/2020/08/18/2020-08-18-dbc/</guid>
      <description>Eclipse Kuksa.val DBC Feeder Demo [Video] This demo showcases the features of the kuksa.val (https://github.com/eclipse/kuksa.val) server.
While the automotive world is full of standards, there are not a lot of useful standards for an I(o)T world. Useful here means
Standardize on semantics, not technology only Usable across vendors, by anyone (car manufacturers, suppiers, aftermarket, third parties) Building on, or interacting with, common IT technologies One of the more useful approaches in this context is the Genivi Vehicle signal specification (VSS) (https://github.</description>
    </item>
    
  </channel>
</rss>
